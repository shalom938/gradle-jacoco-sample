plugins {
    id 'java-library'
    //using versions catalogs, same as: id 'org.javamodularity.moduleplugin'
    //todo: check why testMessage don't work without this plugin, its not in the module path, the plugin adds them
    // to the module path for tests. we also need the plugin for the module-info.test
    alias(pluginslibs.plugins.moduleplugin)
}


dependencies {

    implementation project(':message-provider')
    implementation project(':message-journal')

    testImplementation testinglibs.junit.jupiter
    testRuntimeOnly project(':cmd-message-provider')
    testRuntimeOnly project(':env-message-provider')
}

compileJava{
    //because this module has a qualified export 'exports org.sk.sample.messenger to sample.app'
    //and sample.app is not available during compile of this module the compiler emits a warning.
    //this will also disable other warnings related to modules.
    options.compilerArgs += ['-Xlint:-module']
}



test {
    testLogging {
        showStandardStreams project.hasProperty("show.unit.tests.stdout")
        events "passed", "skipped", "failed"
        showStackTraces true
        exceptionFormat 'full'
        showCauses true
    }
}